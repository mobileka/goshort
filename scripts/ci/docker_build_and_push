#!/bin/bash

#
# This script builds a Docker image and pushes it to a container registry
#
# Usage: docker_build_and_push <version> <commit_sha>
# Example: docker_build_and_push v1.2.3 a1b2c3d4e5f6
#
# The script uses the following environment variables:
#
# - CONTAINER_REGISTRY
# - IMAGE_NAME
# - CI_ENV
#

set -e

log() {
  printf "%s\n" "$@" >&2
}

# Validate required environment variables
if [[ -z "$CONTAINER_REGISTRY" || -z "$IMAGE_NAME" || -z "$CI_ENV" ]]; then
  log "Error: Missing required environment variables."  \
      "Please set CONTAINER_REGISTRY, IMAGE_NAME, and CI_ENV." \
      "CONTAINER_REGISTRY is the URL of the container registry (e.g. ghcr.io)." \
      "IMAGE_NAME is the name of the Docker image (e.g. myorg/myapp)." \
      "Possible values for CI_ENV: gha, gitlab-ci, local."
  exit 1
fi

if [ "$#" -ne 2 ]; then
    log "Usage: $0 <version> <commit_sha>" \
        "Example: $0 v1.2.3 a1b2c3d4e5f6"

    exit 1
fi

# Enable tracing mode if the CI runner runs in debug mode,
# so the script prints each command before executing it.
if [[ "$CI_DEBUG_TRACE" == "true" || "$RUNNER_DEBUG" == "1" ]]; then
  set -x
fi

version="$1"
commit_sha="$2"

# By default, use local caching
cache_from_type="local"
cache_to_type="local,mode=max"

if [[ "$CI_ENV" == "gha" ]]; then
    log "Running on GitHub Actions..." \
        "Configured Docker to use the GHA cache."

    cache_from_type="gha"
    cache_to_type="gha,mode=max"
elif [[ "$CI_ENV" == "gitlab-ci" ]]; then
  log "Running on GitLab CI..." \
      "Configured Docker to use the GitLab CI cache."

  cache_from_type="registry"
  cache_to_type="registry,mode=max"
fi

# Image tags with -t flags hardcoded
tags=(
  "$CONTAINER_REGISTRY/$IMAGE_NAME:$version"
  "$CONTAINER_REGISTRY/$IMAGE_NAME:$commit_sha"
  "$CONTAINER_REGISTRY/$IMAGE_NAME:latest"
)

docker build \
  --cache-from type="$cache_from_type" \
  --cache-to type="$cache_to_type" \
  -t "${tags[0]}" \
  -t "${tags[1]}" \
  -t "${tags[2]}" \
  .

# Push all tags
for tag in "${tags[@]}"; do
  PUSH_OUTPUT=$(docker push "$tag")
done

# Extract the digest from the last push output
echo "$PUSH_OUTPUT" | grep "digest: sha256:" | awk '{print $3}')

set +x